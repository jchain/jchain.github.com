<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Vim | A Coding Monkey's Blog]]></title>
  <link href="http://jchain.github.com/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://jchain.github.com/"/>
  <updated>2013-07-25T14:55:35-05:00</updated>
  <id>http://jchain.github.com/</id>
  <author>
    <name><![CDATA[Zandy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vim gets slow when editing LaTeX file]]></title>
    <link href="http://jchain.github.com/blog/2012/12/26/vim-gets-slow-when-editing-latex/"/>
    <updated>2012-12-26T04:10:00-06:00</updated>
    <id>http://jchain.github.com/blog/2012/12/26/vim-gets-slow-when-editing-latex</id>
    <content type="html"><![CDATA[<p>Recently I have been working on editing multiple LaTeX files containing many lines and equations.
I noticed there was an annoying slowdown when I moved the cursor around. CPU usage jumped to 100% so
frequently that I almost lost patience to focus on the writing itself.</p>

<p>After tweaking the Vim plugins and configurations for a while, I found out <code>set cursorline</code> and the
built-in plugin <code>MatchParen</code> made Vim scrolling very slow. Some people seemed to have run into the
same problem as mentioned <a href="http://haerench.blogspot.com/2012/12/cursorline-cursorcolumn-and-syntax.html">here</a> and <a href="https://bbs.archlinux.org/viewtopic.php?id=111647">here</a>. Some complained that Vim got slow when editing
Ruby file. And I use Vim in terminal.</p>

<p>I have no idea why Vim drawing is so CPU expensive. At this moment I disabled the highlighting of
<code>cursorline</code> and <code>cursorcolumn</code></p>

<pre><code>set nocursorline
set nocursorcolumn 
</code></pre>

<p>I also notice that cursor movements in the equation environment was very slow partially it was
because the math equations had so many parentheses, brackets and braces. Matching pairs and syntax
highlighting easily ate a good amount of CPU cycles. So I turned off this plugin by</p>

<pre><code>:NoMatchParen
</code></pre>

<p>I didn&rsquo;t completely disable this plugin since I found that it was useful when editing long
equations. So I didn&rsquo;t try this in <code>.vimrc</code></p>

<pre><code>let g:loaded_matchparen=1
</code></pre>

<p>I found some other tweaks by using Vim&rsquo;s <code>:profile</code> command and the verbose options <code>vim -V
foo.bar</code>. They are good ways to try to analyze the slowdown.</p>

<p>The lesson I learned:</p>

<ol>
<li>All-around syntax highlighting seems a little bit expensive in Vim. Emacs seems to beat Vim on
this point.</li>
<li>Use <code>autocmd FileType</code> to further tweak the performance, such as disable the
unnecessary plugins.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Indent only XML file]]></title>
    <link href="http://jchain.github.com/blog/2011/12/15/indent-only-xml-file/"/>
    <updated>2011-12-15T10:48:24-06:00</updated>
    <id>http://jchain.github.com/blog/2011/12/15/indent-only-xml-file</id>
    <content type="html"><![CDATA[<p>Recently I have worked on editing XML files in Vim. These XML files are the documents of a software in DocBook style. Since they are maintained manually, the indentation is badly formatted. So before getting deeper, the very first thing to do was to re-indent the files. It turned out from a short Google search that the tools to get the job done could be:</p>

<ul>
<li><p><a href="http://ku1ik.com/2011/09/08/formatting-xml-in-vim-with-indent-command.html">xmllint</a></p></li>
<li><p><a href="http://xmlindent.sourceforge.net/">xmlindent</a></p></li>
<li><p><a href="http://www.kitebird.com/software/xmlformat/xmlformat.html">xmlformat</a></p></li>
<li><p><a href="http://www.qualitybrain.com/?p=37">tidy</a></p></li>
</ul>


<p>xmllint, xmlindent and tidy seem to remove the empty lines I left intentionally, which is bad since I want to keep them for readability. xmlformat seems to provide such options to add blank lines but I didn&rsquo;t have time to look into. So finally I only used &lsquo;gg=G&rsquo; in Vim to format the XML file. This operation was only to indent the file without combining or removing any blank lines. That was just what I needed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Search and replace in a visual selection]]></title>
    <link href="http://jchain.github.com/blog/2011/02/01/search-and-replace-in-a-visual-selection/"/>
    <updated>2011-02-01T01:47:14-06:00</updated>
    <id>http://jchain.github.com/blog/2011/02/01/search-and-replace-in-a-visual-selection</id>
    <content type="html"><![CDATA[<p>:%s/\%Vold/NEW/g</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Start Vim without loading vimrc]]></title>
    <link href="http://jchain.github.com/blog/2011/01/21/start-vim-without-loading-vimrc/"/>
    <updated>2011-01-21T21:25:21-06:00</updated>
    <id>http://jchain.github.com/blog/2011/01/21/start-vim-without-loading-vimrc</id>
    <content type="html"><![CDATA[<p>You can also start it without reading any of the initialization files
(.vimrc, /etc/vim/vimrc) like this:</p>

<pre><code>vim -u NONE file
</code></pre>

<p>Credit due to <a href="http://fossplanet.com/f10/open-vim-syntax-off-92829/">Smoot Carl-Mitchell</a></p>
]]></content>
  </entry>
  
</feed>
