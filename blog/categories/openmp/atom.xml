<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: OpenMP | A Coding Monkey's Blog]]></title>
  <link href="http://jchain.github.com/blog/categories/openmp/atom.xml" rel="self"/>
  <link href="http://jchain.github.com/"/>
  <updated>2013-08-08T22:48:11-05:00</updated>
  <id>http://jchain.github.com/</id>
  <author>
    <name><![CDATA[Zandy]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Iterative closest points(ICP) demo]]></title>
    <link href="http://jchain.github.com/blog/2010/12/06/iterative-closest-pointsicp-demo/"/>
    <updated>2010-12-06T15:34:32-06:00</updated>
    <id>http://jchain.github.com/blog/2010/12/06/iterative-closest-pointsicp-demo</id>
    <content type="html"><![CDATA[<p><a href="http://www.youtube.com/watch?v=igb8mAJ6F5I">http://www.youtube.com/watch?v=igb8mAJ6F5I</a></p>
<figure>
<img src="http://zandyware.files.wordpress.com/2010/12/out.png" title="Benchmark of Iterative Closest Points with OpenMP" />
</figure>
<p>The Perl code generating the plot is listed below</p>
<pre class="sourceCode perl"><code class="sourceCode perl"><span class="kw">#!/usr/bin/perl</span>

<span class="kw">use</span> <span class="kw">strict</span>;
<span class="kw">use</span> <span class="kw">warnings</span>;
<span class="kw">use</span> <span class="fu">Chart::Gnuplot</span>;

<span class="co">### Write running time  </span>
<span class="fu">open</span> <span class="kw">my</span> <span class="dt">$IN</span>, <span class="kw">&#39;</span><span class="st">&lt;</span><span class="kw">&#39;</span>, <span class="kw">&quot;</span><span class="st">benchmark.dat</span><span class="kw">&quot;</span> <span class="kw">or</span> <span class="fu">die</span> <span class="dt">$!</span>;

<span class="co"># Data</span>
<span class="kw">my</span> <span class="dt">@x</span>;
<span class="kw">my</span> <span class="dt">@y</span>;

<span class="kw">while</span>( &lt;<span class="dt">$IN</span>&gt; ) {
    <span class="fu">chomp</span>;
    <span class="kw">my</span> (<span class="dt">$t1</span>, <span class="dt">$t2</span>) = <span class="fu">split</span> <span class="kw">/</span><span class="bn">\s</span><span class="kw">/</span>;
    <span class="fu">push</span> <span class="dt">@x</span>, <span class="dt">$t1</span>;
    <span class="fu">push</span> <span class="dt">@y</span>, <span class="dt">$t2</span>;
}

<span class="co"># Create chart object and specify the properties of the chart</span>
<span class="kw">my</span> <span class="dt">$chart</span> = <span class="fu">Chart::Gnuplot</span>-&gt;new(
    output =&gt; <span class="kw">&quot;</span><span class="st">out.eps</span><span class="kw">&quot;</span>,
    title  =&gt; <span class="kw">&quot;</span><span class="st">Iterative Closest Points with Stanford Bunny</span><span class="kw">&quot;</span>,
    xlabel =&gt; <span class="kw">&quot;</span><span class="st">Number of threads</span><span class="kw">&quot;</span>,
    ylabel =&gt; <span class="kw">&quot;</span><span class="st">Time(s)</span><span class="kw">&quot;</span>,
    boxwidth =&gt; <span class="kw">&quot;</span><span class="st">0.8 relative</span><span class="kw">&quot;</span>
);

<span class="co"># Create dataset object and specify the properties of the dataset</span>
<span class="kw">my</span> <span class="dt">$dataSet</span> = <span class="fu">Chart::Gnuplot</span>::<span class="fu">DataSet</span>-&gt;new(
    xdata =&gt; \<span class="dt">@x</span>,
    ydata =&gt; \<span class="dt">@y</span>,
    title =&gt; <span class="kw">&quot;</span><span class="st">Time</span><span class="kw">&quot;</span>,
    <span class="co">#style =&gt; &quot;linespoints&quot;,</span>
    style =&gt; <span class="kw">&quot;</span><span class="st">boxes</span><span class="kw">&quot;</span>,
    fill =&gt; <span class="kw">&quot;</span><span class="st">0.75</span><span class="kw">&quot;</span>,
);
 
<span class="co"># Plot the data set on the chart</span>
<span class="dt">$chart</span>-&gt;<span class="dt">plot2d</span>(<span class="dt">$dataSet</span>);
 
<span class="co">##################################################</span>
 
<span class="co"># Plot many data sets on a single chart</span>
<span class="co">#$chart-&gt;plot2d($dataSet1, $dataSet2, ...); </span></code></pre>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using OpenMP with CMake]]></title>
    <link href="http://jchain.github.com/blog/2010/12/05/using-openmp-with-cmake/"/>
    <updated>2010-12-05T20:51:14-06:00</updated>
    <id>http://jchain.github.com/blog/2010/12/05/using-openmp-with-cmake</id>
    <content type="html"><![CDATA[<p>Add the following lines into your CMakeLists.txt</p>
<pre><code># Even though -fopenmp won&#39;t appear in the GUI options, it does take effect
SET(CMAKE_CXX_FLAGS &quot;${CMAKE_CXX_FLAGS} -fopenmp&quot;)
SET(CMAKE_C_FLAGS &quot;${CMAKE_C_FLAGS} -fopenmp&quot;)</code></pre>]]></content>
  </entry>
  
</feed>
